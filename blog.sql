-- phpMyAdmin SQL Dump
-- version phpStudy 2014
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 服务器版本: 5.5.53
-- PHP 版本: 5.4.45

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";

/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `blog`
--
-- --------------------------------------------------------
--
-- 表的结构 `admin`
--
CREATE TABLE IF NOT EXISTS `admin`
(
    `id`       mediumint(9) NOT NULL AUTO_INCREMENT,
    `username` varchar(30)  NOT NULL,
    `password` char(32)     NOT NULL,
    PRIMARY KEY (`id`),
    UNIQUE KEY `username` (`username`)
) ENGINE = MyISAM
  DEFAULT CHARSET = utf8
  AUTO_INCREMENT = 1206227;

--
-- 转存表中的数据 `admin`
--
INSERT INTO `admin` (`id`, `username`, `password`)
VALUES (860088, '杨卓尔黑', '860088');

-- --------------------------------------------------------
--
-- 表的结构 `admin_login_log`
--
CREATE TABLE IF NOT EXISTS `admin_login_log`
(
    `id`       bigint(20) NOT NULL AUTO_INCREMENT COMMENT '日志ID',
    `admin_id` int(11)    NOT NULL COMMENT '管理员ID',
    `date`     timestamp  NULL DEFAULT NULL COMMENT '登陆日期',
    `ip`       varchar(30)     DEFAULT NULL COMMENT '登陆IP',
    PRIMARY KEY (`id`)
) ENGINE = MyISAM
  DEFAULT CHARSET = utf8
  AUTO_INCREMENT = 41;

--
-- 转存表中的数据 `admin_login_log`
--
INSERT INTO `admin_login_log` (`id`, `admin_id`, `date`, `ip`)
VALUES (5, 860088, '2020-06-11 10:00:00', '0:0:0:0:0:0:0:1'),
       (6, 860088, '2020-06-11 12:00:00', '0:0:0:0:0:0:0:1');

-- --------------------------------------------------------
--
-- 表的结构 `article`
--
CREATE TABLE IF NOT EXISTS `article`
(
    `id`         mediumint(9) NOT NULL AUTO_INCREMENT,
    `title`      varchar(50)  NOT NULL COMMENT '标题',
    `keywords`   varchar(150) NOT NULL COMMENT '关键字',
    `desci`      varchar(500) NOT NULL COMMENT '描述',
    `pic`        varchar(500)          DEFAULT NULL COMMENT '图片地址',
    `content`    text         NOT NULL COMMENT '内容',
    `click`      mediumint(9) NOT NULL DEFAULT '0' COMMENT '点击量',
    `time`       timestamp    NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '发表日期',
    `catalog_id` mediumint(9) NOT NULL,
    PRIMARY KEY (`id`)
) ENGINE = MyISAM
  DEFAULT CHARSET = utf8
  AUTO_INCREMENT = 105;

--
-- 转存表中的数据 `article`
--
INSERT INTO `article` (`id`, `title`, `keywords`, `desci`, `pic`, `content`, `click`, `time`, `catalog_id`)
VALUES (98, 'http的请求与响应-----content-type', '', 'content-type 指请求消息头的中请求消息数据的格式\r\n\r\n有三种用法。', NULL,
        '<p style="margin: 10px auto;">content-type 指请求消息头的中请求消息数据的格式<br/><br/>有三种用法<br/><br/>第一种：设置在request header的参数中<br/><br/>js中可以在发送请求前在请求消息头中设置content-type<br/>var xhr = window.XMLHttpRequest ? new window.XMLHttpRequest() : new ActiveXObject(&#39;Microsoft.XMLHTTP&#39;);<br/>xhr.open(method, url, true);<br/>xhr.onreadystatechange = function () {};<br/>xhr.setRequestHeader(&#39;Content-Type&#39;, &#39;application/x-www-form-urlencoded&#39;);<br/>xhr.send(params);<br/><br/>第二种：设置在发送请求页面的header中<br/>&lt;header&gt;<br/>&nbsp; &lt;meta content=&quot;text/html&quot; charset=&quot;utf-8&quot;/&gt;<br/>&lt;/header&gt;<br/>第三种：设置在form表单提交的enctype参数中<br/>&lt;form enctype=&quot;multipart/form-data&quot;&gt;&lt;/form&gt;<br/><br/>格式 Content-Type: type/subtype;parameter;<br/>例如 Content-Type: text/html;charset:utf-8;<br/>&nbsp;<br/>type:text,或者application,或者*<br/>&nbsp;&nbsp;&nbsp;&nbsp; text-------主类型是文本类型<br/>&nbsp;&nbsp;&nbsp;&nbsp; application----主类型是应用<br/>&nbsp;&nbsp;&nbsp;&nbsp; *--------------所有类型都适用<br/>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br/>subtype:子类型<br/>&nbsp;&nbsp; &nbsp;*---------------所有类型都适用<br/>&nbsp;&nbsp;&nbsp; html------------子类型为html格式<br/>&nbsp;&nbsp;&nbsp; xml-------------子类型为xml<br/>&nbsp;&nbsp;&nbsp; png-------------子类型为png格式<br/>&nbsp;&nbsp; &nbsp;<br/>parameter：参数，常用的是编码方式参数charset:utf-8<br/><br/>type/subtype 即是互联网媒体类型，也叫作MIME-Type<br/><br/>常见的媒体类型<br/><br/>主类型是text的<br/><br/>&nbsp;&nbsp;&nbsp; text/html ： HTML格式<br/>&nbsp;&nbsp;&nbsp; text/plain ：纯文本格式&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br/>&nbsp;&nbsp;&nbsp; text/xml ：&nbsp; XML格式<br/>&nbsp;&nbsp;&nbsp; image/png： png图片格式<br/>&nbsp;&nbsp; &nbsp;<br/>主类型是application的<br/><br/>&nbsp;&nbsp;&nbsp; application/xhtml+xml ：XHTML格式<br/>&nbsp;&nbsp;&nbsp; application/xml&nbsp;&nbsp;&nbsp;&nbsp; ： XML数据格式<br/>&nbsp;&nbsp;&nbsp; application/json&nbsp;&nbsp;&nbsp; ： JSON数据格式<br/>&nbsp;&nbsp;&nbsp; application/octet-stream ： 二进制流数据（如常见的文件下载）<br/><br/>特殊的用于上传文件时的mime-type<br/>&nbsp;&nbsp;&nbsp; multipart/form-data ： 需要在表单中进行文件上传时，就需要使用该格式<br/>&nbsp;&nbsp; &nbsp;application/x-www-form-urlencoded: 表单提交默认的mime-type,设置在enctype参数中，表单数据将会以k1=v1&amp;k1=v1&amp;k1=v1的形式发送到服务器<br/>&nbsp;&nbsp; &nbsp;<br/>mime-type的设置与文件类型，文件后缀名密切相关，如tomcat中的web.xml文件中就有详尽的mime-mappping设置<br/>详细的mime-type列表：http://www.w3school.com.cn/media/media_mimeref.asp</p><p>标签:&nbsp;<a href="http://www.cnblogs.com/carolddz/tag/web%E5%89%8D%E7%AB%AF/" style="color: rgb(159, 130, 72); text-decoration-line: none;">web前端</a>,&nbsp;<a href="http://www.cnblogs.com/carolddz/tag/http%E8%AF%B7%E6%B1%82/" style="color: rgb(159, 130, 72); text-decoration-line: none;">http请求</a>,&nbsp;<a href="http://www.cnblogs.com/carolddz/tag/%E5%AA%92%E4%BD%93%E7%B1%BB%E5%9E%8B/" style="color: rgb(159, 130, 72); text-decoration-line: none;">媒体类型</a>,&nbsp;<a href="http://www.cnblogs.com/carolddz/tag/content-type/" style="color: rgb(159, 130, 72); text-decoration-line: none;">content-type</a></p><p><br/></p>',
        90, '2018-02-27 05:36:46', 0),
       (99, '快速定位生产故障问题-JVM进程CPU占用率高于100%', '',
        '这几年作为技术leader处理过的线上紧急问题，掐指一算应该有不下10次吧（说多了都是泪啊~~）。所以挡刀救火也是leader的必备技能！本文主要分享遇到“JVM进程CPU占用率超100%”时如何快速定位原因。',
        NULL,
        '<h1 style="margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; line-height: 36px; color: rgb(79, 79, 79); font-size: 28px; white-space: normal; background-color: rgb(255, 255, 255);">前言</h1><blockquote style="box-sizing: border-box; margin: 0px 0px 24px; padding: 16px; border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); border-radius: 0px 5px 5px 0px; overflow: auto; word-wrap: normal; word-break: normal; color: rgb(63, 63, 63); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal;"><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; box-sizing: border-box; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; text-align: justify; word-wrap: break-word; word-break: normal;">古语有云：人在江湖漂，哪有不挨刀。</p></blockquote><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">这几年作为技术leader处理过的线上紧急问题，掐指一算应该有不下10次吧（<span style="box-sizing: border-box; font-weight: 700;">说多了都是泪啊~~</span>）。所以挡刀救火也是leader的必备技能！本文主要分享遇到“<span style="box-sizing: border-box; font-weight: 700;">JVM进程CPU占用率超100%</span>”时如何快速定位原因。</p><h1 style="margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; line-height: 36px; color: rgb(79, 79, 79); font-size: 28px; white-space: normal; background-color: rgb(255, 255, 255);"><a target="_blank" style="box-sizing: border-box; color: rgb(12, 137, 207);"></a>1. 生产故障-JVM进程CPU占用率高于100%</h1><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">某日，运维同学反馈生产环境有故障，某个JVM进程CPU负载一直居高不下。登入服务器用 top -c 命令查看如下：</p><pre class="prettyprint" style="white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 24px; font-family: Consolas, Inconsolata, Courier, monospace; padding: 8px 16px 4px 56px; font-size: 14px; line-height: 22px; word-break: break-all; background-color: rgb(246, 248, 250); border: none; border-radius: 0px;">top&nbsp;-&nbsp;00:37:39&nbsp;up&nbsp;48&nbsp;days,&nbsp;10:41,&nbsp;&nbsp;5&nbsp;users,&nbsp;&nbsp;load&nbsp;average:&nbsp;3.34,&nbsp;3.18,&nbsp;3.10Tasks:&nbsp;166&nbsp;total,&nbsp;&nbsp;&nbsp;1&nbsp;running,&nbsp;165&nbsp;sleeping,&nbsp;&nbsp;&nbsp;0&nbsp;stopped,&nbsp;&nbsp;&nbsp;0&nbsp;zombie\r\nCpu0&nbsp;&nbsp;:&nbsp;&nbsp;0.7%us,&nbsp;&nbsp;0.3%sy,&nbsp;&nbsp;0.0%ni,&nbsp;99.0%id,&nbsp;&nbsp;0.0%wa,&nbsp;&nbsp;0.0%hi,&nbsp;&nbsp;0.0%si,&nbsp;&nbsp;0.0%stCpu1&nbsp;&nbsp;:100.0%us,&nbsp;&nbsp;0.0%sy,&nbsp;&nbsp;0.0%ni,&nbsp;&nbsp;0.0%id,&nbsp;&nbsp;0.0%wa,&nbsp;&nbsp;0.0%hi,&nbsp;&nbsp;0.0%si,&nbsp;&nbsp;0.0%stCpu2&nbsp;&nbsp;:&nbsp;&nbsp;1.3%us,&nbsp;&nbsp;0.3%sy,&nbsp;&nbsp;0.0%ni,&nbsp;98.3%id,&nbsp;&nbsp;0.0%wa,&nbsp;&nbsp;0.0%hi,&nbsp;&nbsp;0.0%si,&nbsp;&nbsp;0.0%stCpu3&nbsp;&nbsp;:&nbsp;&nbsp;0.3%us,&nbsp;&nbsp;0.0%sy,&nbsp;&nbsp;0.0%ni,&nbsp;99.7%id,&nbsp;&nbsp;0.0%wa,&nbsp;&nbsp;0.0%hi,&nbsp;&nbsp;0.0%si,&nbsp;&nbsp;0.0%stMem:&nbsp;&nbsp;16332280k&nbsp;total,&nbsp;15744336k&nbsp;used,&nbsp;&nbsp;&nbsp;587944k&nbsp;free,&nbsp;&nbsp;&nbsp;200632k&nbsp;buffers\r\nSwap:&nbsp;&nbsp;8191992k&nbsp;total,&nbsp;&nbsp;&nbsp;408724k&nbsp;used,&nbsp;&nbsp;7783268k&nbsp;free,&nbsp;&nbsp;7201204k&nbsp;cached\r\n\r\n&nbsp;&nbsp;PID&nbsp;USER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PR&nbsp;&nbsp;NI&nbsp;&nbsp;VIRT&nbsp;&nbsp;RES&nbsp;&nbsp;SHR&nbsp;S&nbsp;%CPU&nbsp;%MEM&nbsp;&nbsp;&nbsp;&nbsp;TIME+&nbsp;&nbsp;COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9702&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;100.6&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;01:47.18&nbsp;java&nbsp;-server&nbsp;-Xms512M&nbsp;-Xmx512M&nbsp;-Xmn192M&nbsp;-Xss256k&nbsp;-XX:PermSize=64M&nbsp;-XX:MaxPermSize=128M&nbsp;-verbose:\r\n&nbsp;...123456789101112</pre><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">从输出结果看，CPU load 达到3以上，服务器是4核机器，负载已经不低了。进程ID为9720的进程CPU占用率超过100%。</p><h1 style="margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; line-height: 36px; color: rgb(79, 79, 79); font-size: 28px; white-space: normal; background-color: rgb(255, 255, 255);"><a target="_blank" style="box-sizing: border-box; color: rgb(12, 137, 207);"></a>2. 定位故障的思路</h1><ul style="box-sizing: border-box; margin-bottom: 24px; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>首先找出问题进程内CPU占用率高的线程</p></li><li><p>再通过线程栈信息找出该线程当时在运行的问题代码段</p></li></ul><h1 style="margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; line-height: 36px; color: rgb(79, 79, 79); font-size: 28px; white-space: normal; background-color: rgb(255, 255, 255);"><a target="_blank" style="box-sizing: border-box; color: rgb(12, 137, 207);"></a>3. 定位故障的步骤</h1><h2 style="margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; line-height: 32px; color: rgb(79, 79, 79); font-size: 24px; white-space: normal; background-color: rgb(255, 255, 255);"><a target="_blank" style="box-sizing: border-box; color: rgb(12, 137, 207);"></a>3.1 用top命令查找进程内导致CPU占用率高的线程</h2><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">先祭出第一招， top命令加上 -H -b 两个选项：-H 可以查看由某个进程启动的所有线程，-b 选项指定以批处理模式输出结果 。具体命令如下：</p><pre class="prettyprint" style="white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 24px; font-family: Consolas, Inconsolata, Courier, monospace; padding: 8px 16px 4px 56px; font-size: 14px; line-height: 22px; word-break: break-all; background-color: rgb(246, 248, 250); border: none; border-radius: 0px;">$&nbsp;top&nbsp;-Hbp&nbsp;9702top&nbsp;-&nbsp;00:38:54&nbsp;up&nbsp;48&nbsp;days,&nbsp;10:43,&nbsp;&nbsp;5&nbsp;users,&nbsp;&nbsp;load&nbsp;average:&nbsp;0.81,&nbsp;0.36,&nbsp;0.16Tasks:&nbsp;&nbsp;38&nbsp;total,&nbsp;&nbsp;&nbsp;1&nbsp;running,&nbsp;&nbsp;37&nbsp;sleeping,&nbsp;&nbsp;&nbsp;0&nbsp;stopped,&nbsp;&nbsp;&nbsp;0&nbsp;zombieCpu(s):&nbsp;&nbsp;3.5%us,&nbsp;&nbsp;1.4%sy,&nbsp;&nbsp;0.0%ni,&nbsp;94.5%id,&nbsp;&nbsp;0.3%wa,&nbsp;&nbsp;0.0%hi,&nbsp;&nbsp;0.2%si,&nbsp;&nbsp;0.0%stMem:&nbsp;&nbsp;16332280k&nbsp;total,&nbsp;15744500k&nbsp;used,&nbsp;&nbsp;&nbsp;587780k&nbsp;free,&nbsp;&nbsp;&nbsp;200632k&nbsp;buffersSwap:&nbsp;&nbsp;8191992k&nbsp;total,&nbsp;&nbsp;&nbsp;408724k&nbsp;used,&nbsp;&nbsp;7783268k&nbsp;free,&nbsp;&nbsp;7201392k&nbsp;cached\r\n\r\n&nbsp;&nbsp;PID&nbsp;USER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PR&nbsp;&nbsp;NI&nbsp;&nbsp;VIRT&nbsp;&nbsp;RES&nbsp;&nbsp;SHR&nbsp;S&nbsp;%CPU&nbsp;%MEM&nbsp;&nbsp;&nbsp;&nbsp;TIME+&nbsp;&nbsp;COMMAND&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10007&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;R&nbsp;100.5&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;1:41.31&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9702&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.00&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9705&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:06.44&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9706&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.11&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9707&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.11&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9708&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.11&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9709&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.10&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9710&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.00&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9711&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.07&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9712&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.03&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9713&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.03&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9714&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.00&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9715&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:00.00&nbsp;java&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;9716&nbsp;bb&nbsp;&nbsp;&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;0&nbsp;2898m&nbsp;348m&nbsp;&nbsp;14m&nbsp;S&nbsp;&nbsp;0.0&nbsp;&nbsp;2.2&nbsp;&nbsp;&nbsp;0:05.60&nbsp;java12345678910111213141516171819202122</pre><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">输出结果里的PID其实是线程ID，可以看到线程ID为10007的线程CPU占用率为100.5%，它就是罪魁祸首。上面的命令可以再优化下：查出CPU占用率超过某个值的所有线程，例如超过50%，如下：</p><pre class="prettyprint" style="white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 24px; font-family: Consolas, Inconsolata, Courier, monospace; padding: 8px 16px 4px 56px; font-size: 14px; line-height: 22px; word-break: break-all; background-color: rgb(246, 248, 250); border: none; border-radius: 0px;">top&nbsp;-Hbp&nbsp;9702&nbsp;|&nbsp;awk&nbsp;&#39;/java/&nbsp;&amp;&amp;&nbsp;$9&gt;50&#39;1</pre><h2 style="margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; line-height: 32px; color: rgb(79, 79, 79); font-size: 24px; white-space: normal; background-color: rgb(255, 255, 255);"><a target="_blank" style="box-sizing: border-box; color: rgb(12, 137, 207);"></a>3.2 用JVM命令 jstack 精确定位出问题的代码段</h2><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">第二招，用jstack 命令dump出线程栈信息，可以直接定位到出问题的代码段。这里也分两步。第一步把上面的线程ID&nbsp;<span style="box-sizing: border-box; font-weight: 700;">10007</span>&nbsp;转化为十六进制：</p><pre class="prettyprint" style="white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 24px; font-family: Consolas, Inconsolata, Courier, monospace; padding: 8px 16px 4px 56px; font-size: 14px; line-height: 22px; word-break: break-all; background-color: rgb(246, 248, 250); border: none; border-radius: 0px;">$&nbsp;printf&nbsp;&quot;%x\\n&quot;&nbsp;10007271712</pre><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">因为jstack输出的线程栈信息中，线程ID是以十六进制展示的。</p><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">第二步使用命令 jstack $pid | grep “线程id” 把信息打印出来：</p><pre class="prettyprint" style="white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 24px; font-family: Consolas, Inconsolata, Courier, monospace; padding: 8px 16px 4px 56px; font-size: 14px; line-height: 22px; word-break: break-all; background-color: rgb(246, 248, 250); border: none; border-radius: 0px;">$&nbsp;jstack&nbsp;9702&nbsp;|&nbsp;grep&nbsp;&#39;2717&#39;&nbsp;-A&nbsp;30&quot;http-nio-9092-exec-1&quot;&nbsp;daemon&nbsp;prio=10&nbsp;tid=0x00007f3a90014800&nbsp;nid=0x2717&nbsp;runnable&nbsp;[0x00007f3afc72a000]\r\n&nbsp;&nbsp;&nbsp;java.lang.Thread.State:&nbsp;RUNNABLE&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.bb.apigateway.filter.pre.SignatureTokenFilter.run(SignatureTokenFilter.java:44)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:112)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:197)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:161)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.netflix.zuul.FilterProcessor.preRoute(FilterProcessor.java:136)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.netflix.zuul.ZuulRunner.preRoute(ZuulRunner.java:105)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.netflix.zuul.http.ZuulServlet.preRoute(ZuulServlet.java:125)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:74)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:158)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequestInternal(ZuulController.java:43)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:869)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;javax.servlet.http.HttpServlet.service(HttpServlet.java:648)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;javax.servlet.http.HttpServlet.service(HttpServlet.java:729)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115)1234567891011121314151617181920212223242526272829303132</pre><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">下面这行就是出问题的业务代码，根据实际情况修复BUG即可</p><blockquote style="box-sizing: border-box; margin: 0px 0px 24px; padding: 16px; border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); border-radius: 0px 5px 5px 0px; overflow: auto; word-wrap: normal; word-break: normal; color: rgb(63, 63, 63); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal;"><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; box-sizing: border-box; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; text-align: justify; word-wrap: break-word; word-break: normal;">com.bb.apigateway.filter.pre.SignatureTokenFilter.run(SignatureTokenFilter.java:44)</p></blockquote><h1 style="margin: 8px 0px 16px; padding: 0px; box-sizing: border-box; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; line-height: 36px; color: rgb(79, 79, 79); font-size: 28px; white-space: normal; background-color: rgb(255, 255, 255);"><a target="_blank" style="box-sizing: border-box; color: rgb(12, 137, 207);"></a>4. 小结</h1><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">思路：</p><ul style="box-sizing: border-box; margin-bottom: 24px; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>找出CPU占用率高的进程</p></li><li><p>找出问题进程内CPU占用率高的线程</p></li><li><p>通过线程栈信息找出该线程当时在运行的问题代码段</p></li></ul><p style="margin-top: 0px; margin-bottom: 16px; padding: 0px; box-sizing: border-box; color: rgb(79, 79, 79); line-height: 26px; text-align: justify; word-wrap: break-word; word-break: normal; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);">实施要点：</p><ul style="box-sizing: border-box; margin-bottom: 24px; padding: 0px; color: rgb(63, 63, 63); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>top -Hbp ‘pid’ 定位问题线程</p></li><li><p>jstack ‘pid’ | grep ‘thread_id’ 找出问题代码</p></li></ul><p><br/></p>',
        85, '2018-02-27 05:55:10', 0);

-- --------------------------------------------------------
--
-- 表的结构 `catalog`
--
CREATE TABLE IF NOT EXISTS `catalog`
(
    `id`       mediumint(9) NOT NULL AUTO_INCREMENT,
    `name`     varchar(30)  NOT NULL COMMENT '栏目名称',
    `keywords` varchar(150) NOT NULL COMMENT '栏目关键词',
    `desc`     text         NOT NULL COMMENT '栏目描述',
    `type`     tinyint(1)   NOT NULL DEFAULT '0' COMMENT '栏目类型 0：列表；1：留言',
    PRIMARY KEY (`id`)
) ENGINE = MyISAM
  DEFAULT CHARSET = utf8
  AUTO_INCREMENT = 5;

--
-- 转存表中的数据 `catalog`
--
INSERT INTO `catalog` (`id`, `name`, `keywords`, `desc`, `type`)
VALUES (1, 'PHP', 'PHP', 'PHP', 0),
       (2, '数据库', '数据库', '数据库', 0),
       (3, 'Java', 'Java', 'Java', 0),
       (4, '生活感悟', '生活感悟', '生活感悟', 0);

-- --------------------------------------------------------
--
-- 表的结构 `comment`
--
CREATE TABLE IF NOT EXISTS `comment`
(
    `id`         bigint(20) NOT NULL AUTO_INCREMENT COMMENT '评论id',
    `article_id` bigint(20) NOT NULL COMMENT '文章id',
    `content`    text       NOT NULL COMMENT '评论内容',
    `date`       timestamp  NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '评论日期',
    `name`       varchar(10)         DEFAULT NULL COMMENT '留言者昵称',
    `email`      varchar(30)         DEFAULT NULL COMMENT '留言者邮箱',
    PRIMARY KEY (`id`)
) ENGINE = MyISAM
  DEFAULT CHARSET = utf8mb4
  AUTO_INCREMENT = 12;

--
-- 转存表中的数据 `comment`
--
INSERT INTO `comment` (`id`, `article_id`, `content`, `date`, `name`, `email`)
VALUES (1, 93, '不错', '2020-06-11 13:00:00', '小刚', NULL),
       (11, 104, '赞', '2020-06-11 14:00:00', '小李', NULL);

/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;